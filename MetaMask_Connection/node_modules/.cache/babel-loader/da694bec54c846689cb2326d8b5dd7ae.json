{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hari9\\\\Downloads\\\\final\\\\MetaMask_Connection\\\\src\\\\WalletCardEthers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './WalletCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WalletCardEthers = () => {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n  const [provider, setProvider] = useState(null);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && defaultAccount == null) {\n      // set ethers provider\n      setProvider(new ethers.providers.Web3Provider(window.ethereum)); // connect to metamask\n\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        setConnButtonText('Wallet Connected');\n        setDefaultAccount(result[0]);\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else if (!window.ethereum) {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  };\n\n  useEffect(() => {\n    if (defaultAccount) {\n      provider.getBalance(defaultAccount).then(balanceResult => {\n        setUserBalance(ethers.utils.formatEther(balanceResult));\n      });\n    }\n\n    ;\n  }, [defaultAccount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"walletCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" Connection to MetaMask using ethers.js \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accountDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Address: \", defaultAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balanceDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Balance: \", userBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n\n_s(WalletCardEthers, \"f3J0kOciQMMuJSDQh2Ru4CSQT3A=\");\n\n_c = WalletCardEthers;\nexport default WalletCardEthers;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletCardEthers\");","map":{"version":3,"sources":["C:/Users/hari9/Downloads/final/MetaMask_Connection/src/WalletCardEthers.js"],"names":["React","useState","useEffect","ethers","WalletCardEthers","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","connButtonText","setConnButtonText","provider","setProvider","connectWalletHandler","window","ethereum","providers","Web3Provider","request","method","then","result","catch","error","message","console","log","getBalance","balanceResult","utils","formatEther"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,gBAAD,CAApD;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMc,oBAAoB,GAAG,MAAM;AAClC,QAAIC,MAAM,CAACC,QAAP,IAAmBV,cAAc,IAAI,IAAzC,EAA+C;AAC9C;AACAO,MAAAA,WAAW,CAAC,IAAIX,MAAM,CAACe,SAAP,CAAiBC,YAArB,CAAkCH,MAAM,CAACC,QAAzC,CAAD,CAAX,CAF8C,CAI9C;;AACAD,MAAAA,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxB,EACCC,IADD,CACMC,MAAM,IAAI;AACfX,QAAAA,iBAAiB,CAAC,kBAAD,CAAjB;AACAJ,QAAAA,iBAAiB,CAACe,MAAM,CAAC,CAAD,CAAP,CAAjB;AACA,OAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACfnB,QAAAA,eAAe,CAACmB,KAAK,CAACC,OAAP,CAAf;AACA,OAPD;AASA,KAdD,MAcO,IAAI,CAACV,MAAM,CAACC,QAAZ,EAAqB;AAC3BU,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAtB,MAAAA,eAAe,CAAC,uDAAD,CAAf;AACA;AACD,GAnBD;;AAqBDJ,EAAAA,SAAS,CAAC,MAAM;AACf,QAAGK,cAAH,EAAkB;AAClBM,MAAAA,QAAQ,CAACgB,UAAT,CAAoBtB,cAApB,EACCe,IADD,CACMQ,aAAa,IAAI;AACtBpB,QAAAA,cAAc,CAACP,MAAM,CAAC4B,KAAP,CAAaC,WAAb,CAAyBF,aAAzB,CAAD,CAAd;AACA,OAHD;AAIC;;AAAA;AACD,GAPQ,EAON,CAACvB,cAAD,CAPM,CAAT;AASC,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEC;AAAQ,MAAA,OAAO,EAAEQ,oBAAjB;AAAA,gBAAwCJ;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACC;AAAA,gCAAcJ,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAHD,eAMC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACC;AAAA,gCAAcE,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAND,EASEJ,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAaA,CAnDD;;GAAMD,gB;;KAAAA,gB;AAqDN,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {ethers} from 'ethers'\r\nimport './WalletCard.css'\r\n\r\nconst WalletCardEthers = () => {\r\n\r\n\tconst [errorMessage, setErrorMessage] = useState(null);\r\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\r\n\tconst [userBalance, setUserBalance] = useState(null);\r\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\r\n\tconst [provider, setProvider] = useState(null);\r\n\r\n\tconst connectWalletHandler = () => {\r\n\t\tif (window.ethereum && defaultAccount == null) {\r\n\t\t\t// set ethers provider\r\n\t\t\tsetProvider(new ethers.providers.Web3Provider(window.ethereum));\r\n\r\n\t\t\t// connect to metamask\r\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\r\n\t\t\t.then(result => {\r\n\t\t\t\tsetConnButtonText('Wallet Connected');\r\n\t\t\t\tsetDefaultAccount(result[0]);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetErrorMessage(error.message);\r\n\t\t\t});\r\n\r\n\t\t} else if (!window.ethereum){\r\n\t\t\tconsole.log('Need to install MetaMask');\r\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\r\n\t\t}\r\n\t}\r\n\r\nuseEffect(() => {\r\n\tif(defaultAccount){\r\n\tprovider.getBalance(defaultAccount)\r\n\t.then(balanceResult => {\r\n\t\tsetUserBalance(ethers.utils.formatEther(balanceResult));\r\n\t})\r\n\t};\r\n}, [defaultAccount]);\r\n\t\r\n\treturn (\r\n\t\t<div className='walletCard'>\r\n\t\t<h4> Connection to MetaMask using ethers.js </h4>\r\n\t\t\t<button onClick={connectWalletHandler}>{connButtonText}</button>\r\n\t\t\t<div className='accountDisplay'>\r\n\t\t\t\t<h3>Address: {defaultAccount}</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className='balanceDisplay'>\r\n\t\t\t\t<h3>Balance: {userBalance}</h3>\r\n\t\t\t</div>\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WalletCardEthers;"]},"metadata":{},"sourceType":"module"}